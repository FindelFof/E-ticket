{
    "openapi": "3.0.0",
    "info": {
        "title": "API E-Ticket",
        "description": "API de reservation de ticket en ligne",
        "contact": {
            "email": "findel007@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/register": {
            "post": {
                "summary": "Register a new user",
                "operationId": "8a56853624e025573120a09a4c75d468",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "400": {
                        "description": "User already exists"
                    },
                    "500": {
                        "description": "An error occurred during user registration"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "summary": "Authenticate user",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User authenticated successfully"
                    },
                    "401": {
                        "description": "Unauthorized or Invalid email or password"
                    }
                }
            }
        },
        "/api/me": {
            "get": {
                "summary": "Get the authenticated User",
                "operationId": "9d9bc556f927575aa492a88c28fe5908",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logout": {
            "post": {
                "summary": "Log the user out (Invalidate the token)",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Successfully logged out"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/refresh": {
            "post": {
                "summary": "Refresh a token",
                "operationId": "2c27d311a2876560fcb5a754b556cdc5",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/events": {
            "get": {
                "summary": "Get all events",
                "operationId": "7058ab7c89d20c752b6afd6d808f6526",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            }
        },
        "/api/events/{id}": {
            "get": {
                "summary": "Get an event by ID",
                "operationId": "6f743f71f7a88dbe57be1d9c9ebf47cb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event found"
                    },
                    "404": {
                        "description": "Event not found"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            }
        },
        "/api/events/search/city": {
            "post": {
                "summary": "Search events by city",
                "operationId": "45c83dca77fd8888d62e444ec659070a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "city": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Events found by city"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            }
        },
        "/api/events/search/location": {
            "post": {
                "summary": "Search events by location",
                "operationId": "928b40ac3fecfe42de5250bdd25f658d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "location": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Events found by location"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            }
        },
        "/api/events/search/city-and-date": {
            "post": {
                "summary": "Search events by city and date",
                "operationId": "1ec26539ac0ff1c6bb0008c00d28fb3d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "city": {
                                        "type": "string"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Events found by city and date"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            }
        },
        "/reservations": {
            "post": {
                "summary": "Book a reservation",
                "description": "Book a reservation.",
                "operationId": "2e948887883cf2b28e4988cee803bb22",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "event_id": {
                                        "description": "The ID of the event",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "user_id": {
                                        "description": "The ID of the user",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "ticket_count": {
                                        "description": "The number of tickets",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "card_holder_info": {
                                        "description": "The card holder information",
                                        "type": "string",
                                        "example": "Findel Fofana"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Reservation created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Reservation created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Reservation"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "An error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reservations/{id}": {
            "post": {
                "summary": "Cancel a reservation",
                "description": "Cancel a reservation.",
                "operationId": "5fe264aa5caf5aac9545bbbca457b797",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the reservation",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservation cancelled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Reservation cancelled successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Reservation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Reservation not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Reservation": {
                "required": [
                    "id",
                    "event_id",
                    "user_id",
                    "ticket_count",
                    "card_holder_info"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "event_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "ticket_count": {
                        "type": "integer",
                        "example": 2
                    },
                    "card_holder_info": {
                        "type": "string",
                        "example": "Findel Fofana"
                    }
                },
                "type": "object"
            }
        }
    }
}